{"version":3,"sources":["components/DropDownList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["DropDownList","isOpen","onClick","className","Form","React","useState","name","setName","nameDirty","setNameDirty","nameError","setNameError","email","setEmail","emailDirty","setEmailDirty","emailError","setEmailError","phone","setPhone","phoneDirty","setPhoneDirty","phoneError","setPhoneError","language","setLanguage","languageDirty","setLanguageDirty","languageError","setLanguageError","accept","setAccept","acceptDirty","setAcceptDirty","acceptError","setAcceptError","formValid","setFormValid","dropDownIsOpen","setDropdownIsOpen","blurHandler","e","target","useEffect","href","htmlFor","onChange","value","test","String","nameHandler","onBlur","id","type","placeholder","toLowerCase","emailHandler","phoneHandler","readOnly","textContent","checked","acceptHandler","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9df6eea.chunk.js","sourcesContent":["import React from 'react';\n\nfunction DropDownList({isOpen, onClick}) {\n\n    return(\n        <>\n            <ul className={`form__list ${isOpen ? \"form__list_opened\" : \"\"}`}>\n                <li className={\"form__list-item\"} onClick={onClick}>Русский</li>\n                <li className={\"form__list-item\"} onClick={onClick}>Английский</li>\n                <li className={\"form__list-item\"} onClick={onClick}>Китайский</li>\n                <li className={\"form__list-item\"} onClick={onClick}>Испанский</li>\n            </ul>\n        </>\n    )\n}\n\nexport default DropDownList;","import React from 'react';\nimport DropDownList from \"./DropDownList\";\n\n\nfunction Form() {\n    const [name, setName] = React.useState(\"\");\n    const [nameDirty, setNameDirty] = React.useState(false);\n    const [nameError, setNameError] = React.useState(\"Заполните поле\");\n\n    const [email, setEmail] = React.useState(\"\");\n    const [emailDirty, setEmailDirty] = React.useState(false);\n    const [emailError, setEmailError] = React.useState(\"Заполните поле\");\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [phoneDirty, setPhoneDirty] = React.useState(false);\n    const [phoneError, setPhoneError] = React.useState(\"Заполните поле\");\n\n    const [language, setLanguage] = React.useState(\"\");\n    const [languageDirty, setLanguageDirty] = React.useState(false);\n    const [languageError, setLanguageError] = React.useState(\"Выберите язык\");\n\n    const [accept, setAccept] = React.useState(false);\n    const [acceptDirty, setAcceptDirty] = React.useState(false);\n    const [acceptError, setAcceptError] = React.useState(\"Заполните поле\");\n\n    const [formValid, setFormValid] = React.useState(false);\n\n    const [dropDownIsOpen, setDropdownIsOpen] = React.useState(false);\n\n    function dropDownHandler() {\n        setDropdownIsOpen(!dropDownIsOpen);\n    }\n\n    const blurHandler = (e) => {\n        switch (e.target.name) {\n            case \"name\":\n                setNameDirty(true);\n                break;\n            case \"email\":\n                setEmailDirty(true);\n                break;\n            case \"phone\":\n                setPhoneDirty(true);\n                break;\n            case \"language\":\n                setLanguageDirty(true);\n                break;\n            case \"accept\":\n                setAcceptDirty(true);\n                break\n        }\n    };\n\n    React.useEffect(() => {\n        if (nameError || emailError || phoneError || languageError || acceptError){\n            setFormValid(false)\n        }\n        else {\n            setFormValid(true)\n        }\n\n    }, [nameError, emailError, phoneError, languageError, acceptError])\n\n    const nameHandler = (e) => {\n        setName(e.target.value);\n        const re = /^[a-zA-Zа-яА-ЯёЁ'][a-zA-Z-а-яА-ЯёЁ' ]+[a-zA-Zа-яА-ЯёЁ']?$/;\n        if(!re.test(String(e.target.value))){\n            setNameError(\"Введено не корректное значение\");\n            if (!e.target.value) {\n                setNameError(\"Заполните поле\");\n            }\n        }\n        else {\n            setNameError(\"\");\n        }\n    };\n\n    const emailHandler = (e) => {\n        setEmail(e.target.value);\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(e.target.value).toLowerCase())){\n            setEmailError(\"Введено не корректное значение\");\n            if (!e.target.value) {\n                setEmailError(\"Заполните поле\");\n            }\n        }\n        else {\n            setEmailError(\"\");\n        }\n    };\n\n    const phoneHandler = (e) => {\n        setPhone(e.target.value);\n        const re = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{11}$/;\n        if (!re.test(String(e.target.value))){\n            setPhoneError(\"Введено не корректное значение\");\n            if (!e.target.value) {\n                setPhoneError(\"Заполните поле\");\n            }\n        }\n        else {\n            setPhoneError(\"\");\n        }\n    };\n\n    const languageHandler = (e) => {\n        setLanguage(e.target.textContent);\n        setDropdownIsOpen(false);\n        if (e.target.textContent !== \"Язык\") {\n            setLanguageError(\"\")\n        }\n    };\n\n    const acceptHandler = (e) => {\n        setAccept(e.target.checked);\n\n        if (!e.target.checked) {\n            setAcceptError(\"Заполните поле\")\n        }\n        else {\n            setAcceptError(\"\")\n        }\n    };\n\n    return(\n        <form className={\"form\"}>\n            <h1 className={\"form__title\"}>Регистрация</h1>\n            <h2 className={\"form__subtitle\"}>Уже есть аккаунт? <a className={\"form__link\"} href=\"#\">Войти</a></h2>\n\n            <div className={\"input-container\"}>\n                <label className={\"form__label\"} htmlFor=\"name\">Имя</label>\n                <input onChange={e => nameHandler(e)} value={name} onBlur={e => blurHandler(e)} name=\"name\" className={\"form__input\"} id=\"name\" type=\"text\" placeholder=\"Введите Ваше имя\"/>\n                {(nameDirty && nameError) && <span className={\"form__error\"}>{nameError}</span>}\n            </div>\n\n            <div className={\"input-container\"}>\n                <label className={\"form__label\"} htmlFor=\"email\">Email</label>\n                <input onChange={e => emailHandler(e)} value={email} onBlur={e => blurHandler(e)} name=\"email\" className={\"form__input\"} id=\"email\" type=\"email\" placeholder=\"Введите ваш email\"/>\n                {(emailDirty && emailError) && <span className={\"form__error\"}>{emailError}</span>}\n            </div>\n\n            <div className={\"input-container\"}>\n                <label className={\"form__label\"} htmlFor=\"phone\">Номер телефона</label>\n                <input onChange={e => phoneHandler(e)} value={phone} onBlur={e => blurHandler(e)} name=\"phone\" className={\"form__input\"} id=\"phone\" type=\"tel\" placeholder=\"Введите номер телефона\"/>\n                {(phoneDirty && phoneError) && <span className={\"form__error\"}>{phoneError}</span>}\n            </div>\n\n            <div className={\"input-container\"}>\n                <label className={\"form__label\"} htmlFor=\"language\">Язык</label>\n                <input onBlur={e => blurHandler(e)} name=\"language\" className={\"form__input form__input_select_language\"} placeholder=\"Язык\" id=\"language\" type=\"text\" value={language} readOnly\n                   onClick={dropDownHandler}/>\n                {(languageDirty && languageError) && <span className={\"form__error\"}>{languageError}</span>}\n                <DropDownList\n                    isOpen={dropDownIsOpen}\n                    onClick={languageHandler}\n                />\n            </div>\n\n            <div className={\"input-container\"}>\n                <label className=\"accept\" htmlFor=\"checkbox\">\n                    <input onBlur={e => blurHandler(e)} onChange={e => acceptHandler(e)} className={\"accept__checkbox\"} name=\"accept\" id=\"checkbox\" type=\"checkbox\" checked={accept}/>\n                    <span className={\"accept__pseudo-item\"}/>\n                    <p className={\"accept__text\"}>Принимаю <a className={\"form__link\"} href=\"#\">условия</a> использования</p>\n                    {(acceptError && acceptDirty) && <span className={\"form__error form__error_target_accept\"}>{acceptError}</span>}\n                </label>\n            </div>\n\n            <button disabled={!formValid} className={\"button\"}>Зарегистрироваться</button>\n        </form>\n    )\n}\n\nexport default Form;\n","import './App.css';\nimport React from \"react\";\nimport Form from \"./components/Form\"\n\nfunction App() {\n  return (\n    <Form />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}